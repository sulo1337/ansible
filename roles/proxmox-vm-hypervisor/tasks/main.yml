---
- name: Clone VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    node: "{{ item.value.node | default(proxmox_vm_defaults.node) }}"
    name: "{{ item.key }}"
    newid: "{{ item.value.vmid }}"
    clone: "{{ item.value.clone | default(proxmox_vm_defaults.clone) }}"
    full: yes
    format: unspecified
    timeout: 300
  with_dict: "{{ vms }}"
  tags:
    - create

- name: Update VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    cores: "{{ item.value.cores | default(proxmox_vm_defaults.cores) }}"
    sockets: "{{ item.value.sockets | default(proxmox_vm_defaults.sockets) }}"
    memory: "{{ item.value.memory | default(proxmox_vm_defaults.memory) }}"
    update: yes
    vmid: "{{ item.value.vmid }}"
    node: "{{ item.value.node | default(proxmox_vm_defaults.node) }}"
    name: "{{ item.key }}"
    boot: "dc"
    bootdisk: scsi0
    ipconfig:
      ipconfig0: "{% if (item.value.ipaddress0 is undefined or item.value.ipaddress0=='dhcp') %}ip=dhcp{% else %}ip={{ item.value.ipaddress0}},gw={{ item.value.gateway0 }}{% endif %}"
    ciuser: "{{ item.value.ciuser | default(omit) }}"
    cipassword: "{{ item.value.cipassword | default(omit) }}"
    sshkeys: "{{ item.value.sshkeys | default(omit) }}"
  with_dict: "{{ vms }}"
  tags:
    - update

- name: Configure VM Network
  community.general.proxmox_nic:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    vmid: "{{ item.value.vmid }}"
    interface: net0
    bridge: "{{ item.value.bridge }}"
    tag: "{{ item.value.vlanid | default(omit) }}"
  with_dict: "{{ vms }}"
  tags:
    - update
    
- name: Resize VM Disk
  community.general.proxmox_disk:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    vmid: "{{ item.value.vmid }}"
    disk: "scsi0"
    state: "resized"
    size: "{{ item.value.disksize | default(proxmox_vm_defaults.disksize) }}"
  with_dict: "{{ vms }}"
  tags:
    - update
    

- name: Stop VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    vmid: "{{ item.value.vmid }}"
    node: "{{ item.key | default(proxmox_vm_defaults.node) }}"
    state: stopped
    timeout: 20
  with_dict: " {{ vms }} "
  ignore_errors: true
  tags:
    - never
    - stop
    - delete
    - restart

- name: Start VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    vmid: "{{ item.value.vmid }}"
    node: "{{ item.key | default(proxmox_vm_defaults.node) }}"
    state: started
  with_dict: "{{ vms }}"
  tags:
    - start
    - restart
    
- name: Confirm Delete VMs
  pause:
    prompt: "Are you sure you want to delete VM with ID: {{ item.value.vmid }}?. Press 'return' to continue. Press Ctrl+C and then 'a' to abort."
  with_dict: " {{ vms }} "
  tags:
    - never
    - delete

- name: Delete VMs
  community.general.proxmox_kvm:
    api_user: "{{ proxmox.api_user }}"
    api_token_id: "{{ proxmox.api_token_id }}"
    api_token_secret: "{{ proxmox.api_token_secret }}"
    api_host: "{{ proxmox.api_host | default(inventory_hostname) }}"
    vmid: "{{ item.value.vmid }}"
    node: "{{ item.key | default(proxmox_vm_defaults.node) }}"
    state: absent
    timeout: 20
  with_dict: " {{ vms }} "
  ignore_errors: true
  tags:
    - never
    - delete
