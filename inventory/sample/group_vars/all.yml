---
# START ----- ansible settings
ansible_user: ansible_user
ansible_ssh_private_key_file: /path/to/private/key
# END ----- ansible settings

# START ----- software versions
docker_compose_version: "v2.19.0"
# END ------ software versions

# START ----- traefik setup variables
traefik_acme_http_email: email@domain.com
traefik_acme_dns_email: email@domain.com
traefik_image_version: v2.10.1
traefik_ssl_cert_volume_name: ssl_certs
traefik_fqdn: traefik.some_domain.com
traefik_network_name: traefik_net
cert_resolver: dns-staging # one of http-staging,dns-staging,http,dns
# END ----- traefik setup variables

# START ----- netmaker setup variables
nm_image_version: v0.20.1
nm_mosquitto_image_version: 2.0.15-openssl
nm_turnserver_image_version: v1.0.0
nm_domain: domain.com
nm_server_host: 1.1.1.1 # public IP of netmaker server
nm_stun_port: 3478
nm_api_port: 8081
nm_turn_port: 3479
nm_turn_api_port: 8089
nm_mq_port: 8883
nm_broker_subdomain: nmbroker
nm_stun_subdomain: nmstun
nm_turn_subdomain: nmturn
nm_api_subdomain: nmapi
nm_dashboard_subdomain: nmdashboard
nm_turnapi_subdomain: nmturnapi
nm_cors_allowed_origin: https://nmdashboard.domain.com
nm_traefik_network_name: traefik_net
nm_turn_username: netmaker
nm_mq_username: netmaker
nm_dns_mode: on 
nm_display_keys: on
nm_default_proxy_mode: off
nm_debug_mode: off 
nm_telemetry: off
nm_rest_backend: on 
nm_disable_remote_ip_check: off
nm_log_verbosity: 1
nm_netclient_auto_update: enabled 
nm_database: sqlite # only sqlite supported by automation for now
nm_cert_resolver: dns-staging # one of http-staging,dns-staging,http,dns
#END ----- netmaker setup variables

# START ----- netclient setup variables
nc_version: v0.20.1
nc_os_dist: linux
nc_arch: amd64
# END ----- netclient setup variables

# START ---- adguard setup variables
adguard_admin_user: admin
adguard_admin_pw: <bcrypt-encrypted-pw>
adguard_dns_port: 53
adguard_fqdn: adguard-dashboard.example.com
adguard_cert_resolver: dns-staging # one of http-staging,dns-staging,http,dns
adguard_image_version: v0.108.0-b.38
adguard_traefik_network_name: traefik_docker_network_to_connect_to
# END ----- adguard setup variables

# START ----- k3s setup variables
k3s_version: v1.22.3+k3s1
systemd_dir: /etc/systemd/system
k3s_api_allow_subnets: 
  - 10.0.0.0/24 # additional subnet to allow kubernetes api access from
system_timezone: "Europe/London"
flannel_iface: "eth0"
k3s_node_ip: '{{ ansible_facts[flannel_iface]["ipv4"]["address"] }}'
apiserver_endpoint: "your.kubernetes.domain.com"
k3s_token: "some-SUPER-secret-token"
k3s_master_taint: "{{ true if groups['k3s_node'] | default([]) | length >= 1 else false }}"
extra_args: >-
  --flannel-iface={{ flannel_iface }}
  --node-ip={{ k3s_node_ip }}
  --node-external-ip={{ k3s_node_ip }}
extra_server_args: >-
  {{ extra_args }}
  {{ '--node-taint node-role.kubernetes.io/master=true:NoSchedule' if k3s_master_taint else '' }}
  --tls-san {{ apiserver_endpoint }}
extra_agent_args: >-
  {{ extra_args }}
# END ----- k3s setup variables

# START ----- proxmox vm creation variables
proxmox: 
  api_user: "root@pam" # provide a user with permissions to create VMs
  api_password: "some-password" # provide the password for the user
  api_host: "your-proxmox-hostname" # provide the hostname of the proxmox server
proxmox_vm_defaults:
  node: "pldalprodhypvis01" # proxmox node to create VMs on
  clone: "ubuntu-cloud" # cloud-init image to clone from
  cores: 2 # number of cores
  sockets: 1  # number of sockets
  memory: 2048 # memory in MB
  disksize: "5G" # disk size in GB
  ipaddress: "dhcp" # ip address of VM, static or dhcp
  gateway: "10.0.0.1/24" # gateway of VM
# END ----- proxmox vm creation variables